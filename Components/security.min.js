function linkVerify(m){
    var currentLink = window.location;
    var currentHref = currentLink['href'];
    const afterQuestionMark = currentHref.split('?')[1];
    if(fetchDataBase()==true){
        if(DataBin==undefined){
            if(creatAccount()){
                if(enivroment==true){
                    mainPageRoute(testMaker());
                }else{
                    alert("Please maintain the enviroment rules to access!");
                }
            }else{
                alert("Sorry your account is not created!");
            }
        }else{
            updateUserId();
            mainPageRoute(testMaker());
        }
    }else{
        alert("Take a refresh, your id will correpted!");
    }
}
function creatAccount(){
    return true;
}
let enivroment=true;
function mainPageRoute(link){
    var currentLink = window.location;
    var currentHref = currentLink['href'];
    const url = new URL(currentHref);
    if(url.hostname==''&&url.protocol=='file:'){
       routWithPerfectLink(link);
    }else{
        if(SuperCounter>=7){
            routWithPerfectLink(link);
        }else{
            alert("Please complete all the require fileds");
        }
    }
}
function routWithPerfectLink(link){
    var currentLink = window.location;
    var currentHref = currentLink['href'];
    const url = new URL(currentHref);
    const params = url.searchParams;
    let page;
    if(params.has('page') && validPage(params.get('page'))){
        page = params.get('page');
    }else{
        page = pageList[0];
    }
    other_params();
    link = `./main.html?page=${page}&test=${link}${targetList}`;
    window.location = link;
}
function validPage(page){
    for(let i=0; i<pageList.length; i++){
        if(pageList[i]==page){
            return true;
        }
    }
    for(let i=0; i<additionalList.length; i++){
        if(additionalList[i]==page){
            return true;
        }
    }
    return false;
}
let targetList = '';
function other_params(){
    var currentLink = window.location;
    var currentHref = currentLink['href'];
    const url = new URL(currentHref);
    const params = url.searchParams;
    let paramList = ['page','test','pid','search','lang','subpage','env'];
    if(params.size>2){
        for(let i=2; i<paramList.length; i++){
            if(params.get(paramList[i])!=null){
                targetList += `&${paramList[i]}=${params.get(paramList[i])}`;
            }
        }
    }
    if(!params.has('env')){
        targetList += '&env=false';
    }
}
function updateUserId(){
    if(DataBin!=undefined){
        DataBin.id = `${userIdMaker(browserDetails()[0],browserDetails()[1],freqVisit(),locationDetails()[0],locationDetails()[1])}`;
        DataBin.visit += 1;
        pushData();
    }else{
        alert('Error 400!\nBad request occure.');
    }
}
function testMaker(){
    return `IcA22fM1108H${timeEncoder(((new Date).getTime()),0)}`;
}
/*
{
    userName: 'Gest',
    userId: 'Guest@2401cA22f22K%5r08HW08h03f',
    frequency: 'f',
    loc: ['22','88']
    visit: 0,
    others: []
}
*/
let valid = [["Chrome","Microsoft Internet Explorer","Firefox","Safari"],[109,114,119],["Mobile vision","Desktop vision"],[100,80]];
let SuperCounter=0;
function verify(){
    document.getElementById('verifiWindow').innerHTML = verifiPage.htmlData;
    document.getElementById('verifiWindow').style.display="block";
    getBrowserdata();
    deviceCheck(navigator.userAgent);
    getUserLocation();
    getInternetStatus();
    setTimeout(()=>{
        try{
            document.getElementById("d7").innerHTML = `${userIdMaker(browserDetails()[0],browserDetails()[1],freqVisit(),locationDetails()[0],locationDetails()[1])}`;
        }catch(e){}
    },6200);
    validity([0,0],7,1,"Your id is create yet!.",6000);
    setTimeout(()=>{
        try{
            linkVerify(0);
        }catch(e){}
    },6500);
}
function getBrowserdata(){
    var objappVersion = navigator.appVersion; 
    var browserAgent = navigator.userAgent; 
    var browserName = navigator.appName; 
    var browserVersion = '' + parseFloat(navigator.appVersion); 
    var browserMajorVersion = parseInt(navigator.appVersion, 10); 
    var Offset, OffsetVersion, ix; 
    if((OffsetVersion = browserAgent.indexOf("Chrome")) != -1){ 
        browserName = "Chrome"; 
        browserVersion = browserAgent.substring(OffsetVersion + 7);
    }else if((OffsetVersion = browserAgent.indexOf("MSIE")) != -1){ 
        browserName = "Microsoft Internet Explorer"; 
        browserVersion = browserAgent.substring(OffsetVersion + 5); 
    }else if((OffsetVersion = browserAgent.indexOf("Firefox")) != -1){ 
        browserName = "Firefox"; 
    }else if((OffsetVersion = browserAgent.indexOf("Safari")) != -1){ 
        browserName = "Safari"; 
        browserVersion = browserAgent.substring(OffsetVersion + 7); 
        if((OffsetVersion = browserAgent.indexOf("Version")) != -1) 
            browserVersion = browserAgent.substring(OffsetVersion + 8); 
    }else if((Offset = browserAgent.lastIndexOf(' ') + 1) < (OffsetVersion = browserAgent.lastIndexOf('/'))){ 
        browserName = browserAgent.substring(Offset, OffsetVersion); 
        browserVersion = browserAgent.substring(OffsetVersion + 1); 
        if(browserName.toLowerCase() == browserName.toUpperCase()){ 
            browserName = navigator.appName; 
        } 
    } 
    if((ix = browserVersion.indexOf(";")) != -1) 
        browserVersion = browserVersion.substring(0, ix); 
    if((ix = browserVersion.indexOf(" ")) != -1) 
        browserVersion = browserVersion.substring(0, ix); 
        browserMajorVersion = parseInt('' + browserVersion, 10); 
    if(isNaN(browserMajorVersion)){ 
        browserVersion = '' + parseFloat(navigator.appVersion); 
        browserMajorVersion = parseInt(navigator.appVersion, 10); 
    }
    browserData = [browserName,browserVersion,navigator.appName];
    try{
        document.getElementById("d1").innerHTML = `${browserName}`;
        document.getElementById("d2").innerHTML = `${browserVersion}`;
        document.getElementById("d5").innerHTML = `${navigator.appName}`;
    }catch(e){}
    validity(valid[0],1,browserName,"Unkown browser, please use register one",2000);
    validity(valid[1],2,browserVersion[0]+browserVersion[1]+browserVersion[2],"Update your browser, this version is very old",2500);
    validity(['Netscape','Mozila'],5,navigator.appName,"UnAuthorize agent uses, try to use common agents",5000);
}
function getInternetStatus(){
    var userImageLink = "https://media.geeksforgeeks.org/wp-content/cdn-uploads/20200714180638/CIP_Launch-banner.png";
    var time_start, end_time;
    var downloadSize = 5616998;
    var downloadImgSrc = new Image();
    downloadImgSrc.onload = function(){
        end_time = new Date().getTime();
        displaySpeed(time_start,end_time,downloadSize);
    };
    time_start = new Date().getTime();
    downloadImgSrc.src = userImageLink;
    setTimeout(()=>{
        try{
            if(document.getElementById("d4").innerHTML=='loading..'){
                document.getElementById("d4").innerHTML = 'Offline';
                validity(valid[3],4,-1,"No internet connection\nTry these steps to get back online\n\n#Check your modem and router\n\n#Reconnect to Wi-Fi\n",2500);
            }
        }catch(e){}
    },2000);
}
function displaySpeed(time_start,end_time,downloadSize){ 
    var timeDuration = (end_time - time_start) / 1000; 
    var loadedBits = downloadSize * 8; 
    var bps = (loadedBits / timeDuration).toFixed(2); 
    var speedInKbps = (bps / 1024).toFixed(2); 
    var speedInMbps = (speedInKbps / 1024).toFixed(2); 
    try{
        document.getElementById("d4").innerHTML = `${speedInMbps}kb/s`;
    }catch(e){}
    validity(valid[3],4,Math.round(speedInMbps),"Your internet speed is very very slow, try encrise this net speed",3500);
}
function deviceCheck(details){
	let regexp = /android|iphone|kindle|ipad/i;
	let isMobileDevice = regexp.test(details);
    try{
        if(isMobileDevice){ 
            document.getElementById("d3").innerHTML = `Mobile vision`; 
        }else{ 
            document.getElementById("d3").innerHTML = `Desktop vision`; 
        }
    }catch(e){}
    validity(valid[2],3,document.getElementById("d3").innerHTML,"Unkown vision, please use desktop or mobile to feel better media effects",3000);
}
function getUserLocation(){
    if(navigator.geolocation){
        navigator.geolocation.getCurrentPosition(showPosition, handleError);
    }else{
        validError("Geolocation is not supported by this browser.Try another one!");
    }
    setTimeout(()=>{
        try{
            if(document.getElementById("d6").innerHTML=='loading..'){
                document.getElementById("d6").innerHTML='(?,?)';
                validity([0,0],6,-1,"Your internet power not enough to get location.",4500);
                locationData = [-1,-1];
            }
            if(document.getElementById("d6").innerHTML!='loading..'&&document.getElementById("d6").innerHTML!='(?,?)'){
                validity([0,0],6,1,"",5000);
            }
        }catch(e){}
    },1000);
}
function showPosition(position){
    const latitude = position.coords.latitude;
    const longitude = position.coords.longitude;
    reverseGeocode(latitude, longitude);
}
function reverseGeocode(latitude, longitude){
    const placeName = `(${latitude.toFixed(2)}, ${longitude.toFixed(2)})`;
    try{
        document.getElementById("d6").innerHTML = placeName;
    }catch(e){}
    validity([-1,0],6,(latitude.toFixed(2)+longitude.toFixed(2)),"Position is not valid",4500);
    locationData = [`'${latitude.toFixed(2)}'`,`'${longitude.toFixed(2)}'`];
}
function handleError(error){
	setTimeout (()=>{
    switch (error.code){
        case error.PERMISSION_DENIED:
            validError("Browser denied the request for Geolocation.Give permission to verify.");
        break;
        case error.POSITION_UNAVAILABLE:
            validError("Location information is unavailable in your GPS,Fixed it.");
        break;
        case error.TIMEOUT:
            validError("The request to get your location is timed out, Refresh.");
        break;
        case error.UNKNOWN_ERROR:
            validError("An unknown error occurred, Please contact us or try to connect with another device.");
        break;
    }
    },5000);
}
function validity(loc,id,data,error,time){
    const Timer = setTimeout(() => {
        try{
            let temp=0;
            for(let j=0; j<loc.length; j++){
                if((data>=loc[j]) || (data==loc[j])){
                    SuperCounter++;
                    document.getElementById(`v${id}`).innerHTML="<span class='green'>&#x2714;</span>";
                    temp++;
                    j=loc.length+2;
                }
            }
            if(temp==0){
                document.getElementById(`v${id}`).innerHTML="<span class='red'>&#x274c;</span>";
                setTimeout(()=>{
                    validError(error);
                },500);
            }
        }catch(e){}
    },time);
}
function validError(data){
    if(data!=''){
        // alert(data+"\nPress OK to confermation!");
    }
    nextPage();
}
function nextPage(){
    if(SuperCounter>=7){
        linkVerify(0);
    }
}